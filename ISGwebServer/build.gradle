apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'war'
apply plugin: 'org.hidetake.ssh'


remotes {
  isg_web_aws {
    host = '52.48.126.136'
    user = 'ubuntu'
    identity = file('/Users/joshsinger/.ssh/isg_web.pem')
  }
}

buildscript {
  repositories {
    // for ssh-deploy stuff
    jcenter()
  }
  dependencies {
    classpath group: 'org.hidetake', name: 'gradle-ssh-plugin', version: '1.1.3'
  }
}

repositories {
    mavenCentral()
}

// assumes Ubuntu 14.04
// mafft download line might fail if they change the version available on the web.
task initIsgWebAwsVm {
  doLast {
	  ssh.run {
	    session(remotes.isg_web_aws) {

	    	// stuff to manipulate package installer settings to allow non-interactive config
		    execute 'sudo apt-get install -y python-software-properties debconf-utils'
	    
	    	// Oracle Java 8
			// this repo contains Oracle Java installer 
			execute 'sudo add-apt-repository -y ppa:webupd8team/java'
			execute 'sudo apt-get update'
			// accept oracle license
			execute 'echo "oracle-java8-installer shared/accepted-oracle-license-v1-1 select true" | sudo debconf-set-selections'
			// install java8 jdk
			execute 'sudo apt-get install -y oracle-java8-installer'

            // Apache Tomcat 7
			execute 'sudo apt-get install -y tomcat7' 
			// tell Tomcat where to find Java
			execute "sudo sed -i 's/#JAVA_HOME.*/JAVA_HOME=\\/usr\\/lib\\/jvm\\/java-8-oracle\\/jre/g' /etc/default/tomcat7"

			// Required for running Tomcat on port 80
			execute "sudo apt-get install -y authbind"
			execute "sudo sed -i 's/#AUTHBIND=no/AUTHBIND=yes/g' /etc/default/tomcat7"
			// Increase Tomcat's Java heap to 1 Gb
			execute "sudo sed -i 's/JAVA_OPTS.*/JAVA_OPTS=\"-Djava.awt.headless=true -Xmx1024m -XX:+UseConcMarkSweepGC\"/g' /etc/default/tomcat7"

			execute "sudo touch /etc/authbind/byport/80"
			execute "sudo chmod 500 /etc/authbind/byport/80"
			execute "sudo chown tomcat7 /etc/authbind/byport/80"
			

			put from: 'isg_web_aws/server.xml', into: '/home/ubuntu/server.xml'
			execute "sudo cp /home/ubuntu/server.xml /etc/tomcat7/server.xml"
			
			// start Tomcat
			execute 'sudo service tomcat7 start'

	    }
	  }
  }
}




dependencies {
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.4.1'
    compile group: 'commons-io', name: 'commons-io', version: '1.3.2'
    compile group: 'javax.json', name:'javax.json-api', version:'1.0'
    compile group: 'org.glassfish', name:'javax.json', version:'1.0.4'
    compile group: 'org.apache.commons', name:'commons-lang3', version:'3.0'
	compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version: '2.19'
	compile group: 'org.glassfish.jersey.media', name: 'jersey-media-multipart', version: '2.19' 
 	compile group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0.1'
 	compile group: 'org.apache.lucene', name: 'lucene-core', version: '6.1.0'
	compile group: 'org.apache.lucene', name: 'lucene-analyzers-common', version: '6.1.0'
	compile group: 'org.apache.lucene', name: 'lucene-queryparser', version: '6.1.0'
	providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'
}


task deployWarIsgWebAWS(dependsOn: ['war']) {
  ext.IsgWsWarFile = new File(buildDir, '/libs/ISGwebServer.war')
  ext.IsgWsWarTouchfile = new File(buildDir, '/deployWarIsgWebAWS.touchfile')
  inputs.file IsgWsWarFile
  outputs.file IsgWsWarTouchfile
  doLast {
	  println "Stopping Tomcat"
	  ssh.run {
	    session(remotes.isg_web_aws) {
	      execute 'sudo service tomcat7 stop'
	      execute 'while true; do tcresult="$(sudo service tomcat7 status)" ; if [[ $tcresult != *"Tomcat servlet engine is running"* ]] ; then break ; fi ; sleep 0.5 ; echo "Tomcat is still running" ; done'
	      execute 'sleep 5'
	    }
	  }
	  println "Uploading "+IsgWsWarFile.name
	  ssh.run {
	    session(remotes.isg_web_aws) {
	      put from: warFile.absolutePath, into: '/tmp/ISGwebServer.war'
	      execute 'sudo mkdir -p /var/lib/tomcat7/webapps'
	      execute 'sudo chmod a+rwx /var/lib/tomcat7/webapps'
	      execute 'sudo rm -rf /var/lib/tomcat7/webapps/ISGwebServer'
	      execute 'sudo rm -rf /var/lib/tomcat7/webapps/ISGwebServer.war'
	      execute 'sudo mv /tmp/'+warFile.name+' /var/lib/tomcat7/webapps/ISGwebServer.war'
	      execute 'sudo rm -rf /var/lib/tomcat7/work/Catalina/isg.data.cvr.ac.uk/ISGwebServer'
	      execute 'sudo rm -rf /var/cache/tomcat7/Catalina/isg.data.cvr.ac.uk/ISGwebServer'
	      
	    }
	  }
	  println "Starting Tomcat"
	  sh.run {
	    session(remotes.isg_web_aws) {
	      execute 'sudo service tomcat7 start'
	    }
	  }
	  IsgWsWarTouchfile.delete()
	  buildDir.mkdirs()
	  IsgWsWarTouchfile.createNewFile()
  }
}


